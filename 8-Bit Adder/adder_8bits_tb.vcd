$date
	Thu May 23 01:03:20 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module adder_8bits_tb $end
$var wire 8 ! full_s [7:0] $end
$var wire 8 " full_c_out [7:0] $end
$var reg 8 # full_a [7:0] $end
$var reg 8 $ full_b [7:0] $end
$var reg 8 % full_c_in [7:0] $end
$scope module uut $end
$var wire 8 & carry_in [7:0] $end
$var wire 8 ' first_byte [7:0] $end
$var wire 8 ( second_byte [7:0] $end
$var wire 8 ) sum_bytes [7:0] $end
$var wire 8 * carry_out [7:0] $end
$scope module FA_block0 $end
$var wire 1 + A $end
$var wire 1 , B $end
$var wire 1 - C_in $end
$var wire 1 . C_out $end
$var wire 1 / Sum $end
$var wire 1 0 st1_in1 $end
$var wire 1 1 st1_in2 $end
$var wire 1 2 st2_in1 $end
$var wire 1 3 st2_in2 $end
$var wire 1 4 st2_sum $end
$var wire 1 5 st2_c_out $end
$var wire 1 6 st1_sum $end
$var wire 1 7 st1_c_out $end
$scope module half_adder_st1 $end
$var wire 1 7 c $end
$var wire 1 0 in1 $end
$var wire 1 1 in2 $end
$var wire 1 6 sum $end
$upscope $end
$scope module half_adder_st2 $end
$var wire 1 5 c $end
$var wire 1 2 in1 $end
$var wire 1 3 in2 $end
$var wire 1 4 sum $end
$upscope $end
$upscope $end
$scope module FA_block1 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 : C_in $end
$var wire 1 ; C_out $end
$var wire 1 < Sum $end
$var wire 1 = st1_in1 $end
$var wire 1 > st1_in2 $end
$var wire 1 ? st2_in1 $end
$var wire 1 @ st2_in2 $end
$var wire 1 A st2_sum $end
$var wire 1 B st2_c_out $end
$var wire 1 C st1_sum $end
$var wire 1 D st1_c_out $end
$scope module half_adder_st1 $end
$var wire 1 D c $end
$var wire 1 = in1 $end
$var wire 1 > in2 $end
$var wire 1 C sum $end
$upscope $end
$scope module half_adder_st2 $end
$var wire 1 B c $end
$var wire 1 ? in1 $end
$var wire 1 @ in2 $end
$var wire 1 A sum $end
$upscope $end
$upscope $end
$scope module FA_block2 $end
$var wire 1 E A $end
$var wire 1 F B $end
$var wire 1 G C_in $end
$var wire 1 H C_out $end
$var wire 1 I Sum $end
$var wire 1 J st1_in1 $end
$var wire 1 K st1_in2 $end
$var wire 1 L st2_in1 $end
$var wire 1 M st2_in2 $end
$var wire 1 N st2_sum $end
$var wire 1 O st2_c_out $end
$var wire 1 P st1_sum $end
$var wire 1 Q st1_c_out $end
$scope module half_adder_st1 $end
$var wire 1 Q c $end
$var wire 1 J in1 $end
$var wire 1 K in2 $end
$var wire 1 P sum $end
$upscope $end
$scope module half_adder_st2 $end
$var wire 1 O c $end
$var wire 1 L in1 $end
$var wire 1 M in2 $end
$var wire 1 N sum $end
$upscope $end
$upscope $end
$scope module FA_block3 $end
$var wire 1 R A $end
$var wire 1 S B $end
$var wire 1 T C_in $end
$var wire 1 U C_out $end
$var wire 1 V Sum $end
$var wire 1 W st1_in1 $end
$var wire 1 X st1_in2 $end
$var wire 1 Y st2_in1 $end
$var wire 1 Z st2_in2 $end
$var wire 1 [ st2_sum $end
$var wire 1 \ st2_c_out $end
$var wire 1 ] st1_sum $end
$var wire 1 ^ st1_c_out $end
$scope module half_adder_st1 $end
$var wire 1 ^ c $end
$var wire 1 W in1 $end
$var wire 1 X in2 $end
$var wire 1 ] sum $end
$upscope $end
$scope module half_adder_st2 $end
$var wire 1 \ c $end
$var wire 1 Y in1 $end
$var wire 1 Z in2 $end
$var wire 1 [ sum $end
$upscope $end
$upscope $end
$scope module FA_block4 $end
$var wire 1 _ A $end
$var wire 1 ` B $end
$var wire 1 a C_in $end
$var wire 1 b C_out $end
$var wire 1 c Sum $end
$var wire 1 d st1_in1 $end
$var wire 1 e st1_in2 $end
$var wire 1 f st2_in1 $end
$var wire 1 g st2_in2 $end
$var wire 1 h st2_sum $end
$var wire 1 i st2_c_out $end
$var wire 1 j st1_sum $end
$var wire 1 k st1_c_out $end
$scope module half_adder_st1 $end
$var wire 1 k c $end
$var wire 1 d in1 $end
$var wire 1 e in2 $end
$var wire 1 j sum $end
$upscope $end
$scope module half_adder_st2 $end
$var wire 1 i c $end
$var wire 1 f in1 $end
$var wire 1 g in2 $end
$var wire 1 h sum $end
$upscope $end
$upscope $end
$scope module FA_block5 $end
$var wire 1 l A $end
$var wire 1 m B $end
$var wire 1 n C_in $end
$var wire 1 o C_out $end
$var wire 1 p Sum $end
$var wire 1 q st1_in1 $end
$var wire 1 r st1_in2 $end
$var wire 1 s st2_in1 $end
$var wire 1 t st2_in2 $end
$var wire 1 u st2_sum $end
$var wire 1 v st2_c_out $end
$var wire 1 w st1_sum $end
$var wire 1 x st1_c_out $end
$scope module half_adder_st1 $end
$var wire 1 x c $end
$var wire 1 q in1 $end
$var wire 1 r in2 $end
$var wire 1 w sum $end
$upscope $end
$scope module half_adder_st2 $end
$var wire 1 v c $end
$var wire 1 s in1 $end
$var wire 1 t in2 $end
$var wire 1 u sum $end
$upscope $end
$upscope $end
$scope module FA_block6 $end
$var wire 1 y A $end
$var wire 1 z B $end
$var wire 1 { C_in $end
$var wire 1 | C_out $end
$var wire 1 } Sum $end
$var wire 1 ~ st1_in1 $end
$var wire 1 !" st1_in2 $end
$var wire 1 "" st2_in1 $end
$var wire 1 #" st2_in2 $end
$var wire 1 $" st2_sum $end
$var wire 1 %" st2_c_out $end
$var wire 1 &" st1_sum $end
$var wire 1 '" st1_c_out $end
$scope module half_adder_st1 $end
$var wire 1 '" c $end
$var wire 1 ~ in1 $end
$var wire 1 !" in2 $end
$var wire 1 &" sum $end
$upscope $end
$scope module half_adder_st2 $end
$var wire 1 %" c $end
$var wire 1 "" in1 $end
$var wire 1 #" in2 $end
$var wire 1 $" sum $end
$upscope $end
$upscope $end
$scope module FA_block7 $end
$var wire 1 (" A $end
$var wire 1 )" B $end
$var wire 1 *" C_in $end
$var wire 1 +" C_out $end
$var wire 1 ," Sum $end
$var wire 1 -" st1_in1 $end
$var wire 1 ." st1_in2 $end
$var wire 1 /" st2_in1 $end
$var wire 1 0" st2_in2 $end
$var wire 1 1" st2_sum $end
$var wire 1 2" st2_c_out $end
$var wire 1 3" st1_sum $end
$var wire 1 4" st1_c_out $end
$scope module half_adder_st1 $end
$var wire 1 4" c $end
$var wire 1 -" in1 $end
$var wire 1 ." in2 $end
$var wire 1 3" sum $end
$upscope $end
$scope module half_adder_st2 $end
$var wire 1 2" c $end
$var wire 1 /" in1 $end
$var wire 1 0" in2 $end
$var wire 1 1" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
16
05
14
13
02
01
10
1/
0.
0-
0,
1+
b0 *
b1 )
b0 (
b1 '
b0 &
b0 %
b0 $
b1 #
b0 "
b1 !
$end
#1000000000
11
1,
00
0+
b1 $
b1 (
b0 #
b0 '
#2000000000
b11 !
b11 )
1<
1A
1@
1C
01
0,
1>
19
10
1+
b10 $
b10 (
b1 #
b1 '
#3000000000
0<
0A
b1001 !
b1001 )
1V
1[
0@
0C
1Z
1]
11
1,
0>
09
00
0+
1W
1R
b1 $
b1 (
b1000 #
b1000 '
#4000000000
0/
04
b10 "
b10 *
1;
0V
0[
b100 !
b100 )
1I
1N
03
06
1D
0Z
0]
1L
1G
01
0,
1>
19
1=
18
0W
0R
b100 &
b100 %
b10 $
b10 (
b10 #
b10 '
#5000000000
0;
b10000000 "
b10000000 *
1+"
1/
14
b1 !
b1 )
0I
0N
0D
14"
12
1-
0L
0G
0>
09
1."
1)"
0=
08
1-"
1("
b1 &
b1 %
b10000000 $
b10000000 (
b10000000 #
b10000000 '
#6000000000
x2"
x/"
x*"
x|
x%"
x""
x{
xo
xv
xs
xn
xb
xi
xf
xa
xU
x\
xY
xT
xH
xO
xL
xG
x;
xB
x?
x:
x,"
x1"
x+"
bx1 "
bx1 *
1.
x<
xA
xI
xN
xV
x[
xc
xh
xp
xu
x}
x$"
bx0 !
bx0 )
0/
04
10"
13"
04"
17
1@
1C
1M
1P
1Z
1]
1g
1j
1t
1w
1#"
1&"
02
0-
11
1,
0."
0)"
10
1+
1=
18
1J
1E
1W
1R
1d
1_
1q
1l
1~
1y
bx0 &
b0 %
b1 $
b1 (
b11111111 #
b11111111 '
#7000000000
0V
0[
0c
0h
0p
0u
0}
0$"
0,"
01"
0I
0N
0Y
0T
0f
0a
0s
0n
0""
0{
0/"
0*"
0L
0G
0H
0U
0b
0o
0|
0+"
b1 "
b1 *
0;
0O
0\
0i
0v
0%"
02"
b10 !
b10 )
1<
1A
0B
0@
0C
0M
0P
0Z
0]
0g
0j
0t
0w
0#"
0&"
00"
03"
1?
1:
0=
08
0J
0E
0W
0R
0d
0_
0q
0l
0~
0y
0-"
0("
b10 &
b10 %
b1 #
b1 '
#8000000000
1;
1H
b1111 "
b1111 *
1U
0<
0A
1B
0I
0N
1O
0V
0[
1\
b10000 !
b10000 )
1c
1h
1@
1C
1M
1P
1Z
1]
1L
1G
1Y
1T
1f
1a
1=
18
1J
1E
1W
1R
b11110 &
b11110 %
b1111 #
b1111 '
#9000000000
b10010 !
b10010 )
1<
1A
0B
0@
0C
1D
1>
19
b11 $
b11 (
#10000000000
